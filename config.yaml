# Configuration for Raspberry Pi 5 Federated Environmental Monitoring Network

# Server Configuration
server:
  host: "0.0.0.0"
  port: 8080
  num_rounds: 10
  min_fit_clients: 2
  min_evaluate_clients: 2
  min_available_clients: 2
  
  # TLS Configuration (optional)
  tls:
    enabled: false
    cert_path: "certificates/server.crt"
    key_path: "certificates/server.key"
    ca_path: "certificates/ca.crt"

# Client Configuration
client:
  server_address: "localhost:8080"
  client_id: "pi-client-001"
  
  # Sensor Configuration
  sensors:
    sense_hat:
      enabled: true
      sample_rate_hz: 1.0
    adxl345:
      enabled: true
      sample_rate_hz: 100.0
      range: 16  # Â±16g
  
  # Training Configuration
  training:
    batch_size: 32
    local_epochs: 5
    learning_rate: 0.001
    validation_split: 0.2

# Model Configuration
model:
  lstm:
    input_shape: [24, 2]  # 24 hours, 2 features (temp, humidity)
    lstm_units: 64
    dropout_rate: 0.2
    output_units: 2
  
  autoencoder:
    input_dim: 100  # 100 acceleration samples
    encoding_dim: 32
    learning_rate: 0.001
    batch_size: 64

# Data Configuration
data:
  collection:
    duration_hours: 24
    sample_interval_minutes: 60
  
  preprocessing:
    normalize: true
    remove_outliers: true
    outlier_threshold: 3.0  # Standard deviations

# MATLAB Configuration
matlab:
  enabled: false  # Set to true if MATLAB is available
  engine_timeout: 30  # seconds
  scripts_path: "matlab/"
  
  # Octave fallback
  octave:
    enabled: true
    executable: "octave-cli"

# Logging Configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "json"  # json or text
  file: "logs/federated_learning.log"
  max_file_size_mb: 10
  backup_count: 5

# Security Configuration
security:
  differential_privacy:
    enabled: false
    noise_multiplier: 1.0
    l2_norm_clip: 1.0
  
  secure_aggregation:
    enabled: false

# Performance Configuration
performance:
  max_workers: 4
  memory_limit_gb: 2
  gpu_enabled: false  # Set to true if GPU is available

# Monitoring Configuration
monitoring:
  metrics:
    enabled: true
    port: 9090
    endpoint: "/metrics"
  
  health_check:
    enabled: true
    port: 8081
    endpoint: "/health"
